{"version":3,"file":"FilmsId-BehOwcy3.js","sources":["../../src/store/modules/movieRecsStore.js","../../src/store/modules/movieTrailerStore.js","../../src/pages/FilmsId.vue"],"sourcesContent":["import { defineStore } from \"pinia\";\r\nimport axios from 'axios';\r\nimport optionsMovieRecs from \"@/assets/scripts/options\";\r\nimport { useIndexStore } from \"@/store/indexStore.js\"\r\n\r\nexport const useMovieRecsStore = defineStore(\"movieRecsStore\", {\r\n    state: () => ({\r\n        path: 'https://api.themoviedb.org/3/movie/',\r\n        recs: null,\r\n    }),\r\n    actions: {\r\n        async getRecs(movieId) {\r\n            this.trailer = null\r\n            try {\r\n                const res = await axios.get(`${this.path}${movieId}/recommendations?language=ru-RU`, optionsMovieRecs)\r\n                const data = res.data\r\n                this.recs = data.results\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    getters: {\r\n        getMovieRecs: (state) => (count) => {\r\n            return state.recs ? state.recs.slice(0, count) : []\r\n        }\r\n    }\r\n})","import { defineStore } from \"pinia\";\r\nimport axios from 'axios';\r\nimport optionsMovieRecs from \"@/assets/scripts/options\";\r\nimport { useIndexStore } from \"@/store/indexStore.js\"\r\n\r\nexport const useMovieTrailerStore = defineStore(\"movieTrailerStore\", {\r\n    state: () => ({\r\n        path: 'https://api.themoviedb.org/3/movie/',\r\n        trailer: null,\r\n    }),\r\n    actions: {\r\n        async getTrailer(movieId) {\r\n            this.trailer = null\r\n            try {\r\n                const res = await axios.get(`${this.path}${movieId}/videos?language=ru-RU`, optionsMovieRecs)\r\n                const data = res.data\r\n                this.trailer = data\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    getters: {}\r\n})","<template>\r\n  <div class=\"main\" v-if=\"movie\">\r\n    <div class=\"main__contentId\">\r\n      <div class=\"main__contentId-media\">\r\n        <img :src=\"indexStore.imageFullUrl + movie.backdrop_path\" alt=\"\" class=\"main__contentId-media-poster\">\r\n        <div class=\"main__contentId-media-block\">\r\n          <div class=\"main__contentId-media-left\">\r\n            <h1 class=\"main__contentId-media-left-title\">{{ movie.title }}</h1>\r\n            <p class=\"main__contentId-media-left-text\">{{ movie.overview }}</p>\r\n            <p class=\"main__contentId-media-left-genre\">\r\n              <span class=\"main__contentId-media-date\">{{ new Date(movie.release_date).getFullYear() }}</span>\r\n              <span v-for=\"genre in movie.genres\" :key=\"genre.id\">{{ genre.name }}</span>\r\n            </p>\r\n            <a :href=\"trailer && trailer.results.length ? `https://www.youtube.com/watch?v=${trailer.results[0].key}` : 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'\"\r\n              v-if=\"trailer\" class=\"main__contentId-media-trailer\" target=\"_blank\">\r\n              <fa icon=\"play\" class=\"main__contentId-media-icon\" />\r\n              <span class=\"main__contentId-media-span\">Смотреть Трейлер</span>\r\n            </a>\r\n          </div>\r\n          <div class=\"main__contentId-media-right\">\r\n            <img :src=\"indexStore.imageFullUrl + movie.poster_path\" alt=\"\">\r\n          </div>\r\n          <div class=\"main__contentId-media-actors\">\r\n            <h2 class=\"main__contentId-media-title\">В главных ролях</h2>\r\n            <div class=\"main__contentId-media-casts\">\r\n              <Actor type=\"/movie/\" :id=\"movie.id\" :count=\"6\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"main__budgetBlock container\">\r\n      <div class=\"main__budgetBlock-item\">\r\n        <h4 class=\"budgetBlock-title\">Бюджет</h4>\r\n        <p class=\"budgetBlock-descr\">{{ `$${movie.budget.toLocaleString('de-DE')}` }}</p>\r\n      </div>\r\n      <div class=\"main__budgetBlock-item\">\r\n        <h4 class=\"budgetBlock-title\">Сборы</h4>\r\n        <p class=\"budgetBlock-descr\">{{ `$${movie.revenue.toLocaleString('de-DE')}` }}</p>\r\n      </div>\r\n      <div class=\"main__budgetBlock-item\">\r\n        <h4 class=\"budgetBlock-title\">Статус</h4>\r\n        <p class=\"budgetBlock-descr\">{{ movie.status }}</p>\r\n      </div>\r\n      <div class=\"main__budgetBlock-item\">\r\n        <h4 class=\"budgetBlock-title\">Исходное название</h4>\r\n        <p class=\"budgetBlock-descr\">{{ movie.original_title }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"main__recomendations container\">\r\n      <h3 class=\"main__recomendations-title\">Рекомендации</h3>\r\n      <div class=\"main__recomendations-list\">\r\n        <router-link :to=\"page + rec.id\" class=\"main__recomendations-item\" v-for=\"(rec, idx) in recoms\" :key=\"idx\" @click=\"refreshPage(rec.id)\">\r\n          <img v-lazy=\"indexStore.imageFullUrl + rec.backdrop_path\" alt=\"\" class=\"main__recomendations-item-img\">\r\n          <h2 class=\"main__recomendations-item-name\">{{ rec.title }}</h2>\r\n        </router-link>\r\n        <!-- <Swiper :modules=\"modules\" :space-between=\"25\" navigation :breakpoints=\"swiperOptions.breakpoints\">\r\n          <SwiperSlide :to=\"page + rec.id\" class=\"main__recomendations-item\" v-for=\"(rec, idx) in recoms\" :key=\"idx\" @click=\"refreshPage(rec.id)\">\r\n          <img v-lazy=\"indexStore.imageFullUrl + rec.backdrop_path\" alt=\"\" class=\"main__recomendations-item-img\">\r\n          <h2 class=\"main__recomendations-item-name\">{{ rec.title }}</h2>\r\n        </SwiperSlide>\r\n        </Swiper> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"loading\" v-else>\r\n    <div class=\"loading__spiner\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useIndexStore } from \"@/store/indexStore.js\"\r\nimport { useMovieStore } from \"@/store/modules/movieStore.js\"\r\nimport { useMovieRecsStore } from \"@/store/modules/movieRecsStore.js\"\r\nimport { useMovieTrailerStore } from \"@/store/modules/movieTrailerStore.js\"\r\nimport { onMounted, computed, reactive, ref } from \"vue\"\r\nimport { useRoute, useRouter } from 'vue-router';\r\nimport { Navigation } from 'swiper/modules';\r\nimport { Swiper, SwiperSlide } from 'swiper/vue';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\nconst swiperOptions = reactive({\r\n  breakpoints: {\r\n    320: {\r\n      slidesPerView: 1\r\n    },\r\n    576: {\r\n      slidesPerView: 2\r\n    },\r\n    900: {\r\n      slidesPerView: 3\r\n    },\r\n    1200: {\r\n      slidesPerView: 4\r\n    },\r\n    1450: {\r\n      slidesPerView: 5.5\r\n    }\r\n  }\r\n})\r\n\r\nconst modules = reactive([Navigation])\r\nconst movieStore = useMovieStore()\r\nconst indexStore = useIndexStore()\r\nconst movieRecsStore = useMovieRecsStore()\r\nconst movieTrailerStore = useMovieTrailerStore()\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst countOfRecoms = ref(4)\r\nconst page = '/movie/'\r\n\r\nconst countOfRecs = reactive([1, 2, 3, 4])\r\nconst movie = computed(() => movieStore.movie)\r\nvar trailer = computed(() => movieTrailerStore.trailer)\r\nvar recoms = ref(null)\r\n\r\nonMounted(async () => {\r\n  await fetchMovieData(route.params.id)\r\n});\r\n\r\nconst fetchMovieData = async (movieId) => {\r\n  await movieStore.getMovieById(movieId)\r\n  await movieTrailerStore.getTrailer(movieStore.movie.id)\r\n  await movieRecsStore.getRecs(movieStore.movie.id)\r\n  recoms.value = getCountRecs.value\r\n}\r\n\r\nconst getCountRecs = computed(() => {\r\n  return movieRecsStore.getMovieRecs(countOfRecoms.value)\r\n})\r\n\r\nconst refreshPage = async (movieId) => {\r\n  await fetchMovieData(movieId)\r\n  router.push(`${page}${movieId}`)\r\n  window.scrollTo(0, 0);\r\n}\r\n</script>\r\n\r\n<style></style>"],"names":["useMovieRecsStore","defineStore","movieId","data","axios","optionsMovieRecs","error","state","count","useMovieTrailerStore","page","reactive","Navigation","movieStore","useMovieStore","indexStore","useIndexStore","movieRecsStore","movieTrailerStore","route","useRoute","router","useRouter","countOfRecoms","ref","movie","computed","trailer","recoms","onMounted","fetchMovieData","getCountRecs","refreshPage"],"mappings":"kNAKO,MAAMA,EAAoBC,EAAY,iBAAkB,CAC3D,MAAO,KAAO,CACV,KAAM,sCACN,KAAM,IACd,GACI,QAAS,CACL,MAAM,QAAQC,EAAS,CACnB,KAAK,QAAU,KACf,GAAI,CAEA,MAAMC,GADM,MAAMC,EAAM,IAAI,GAAG,KAAK,IAAI,GAAGF,CAAO,kCAAmCG,CAAgB,GACpF,KACjB,KAAK,KAAOF,EAAK,OACpB,OAAQG,EAAO,CACZ,QAAQ,IAAIA,CAAK,CACpB,CACJ,CACJ,EACD,QAAS,CACL,aAAeC,GAAWC,GACfD,EAAM,KAAOA,EAAM,KAAK,MAAM,EAAGC,CAAK,EAAI,CAAE,CAE1D,CACL,CAAC,ECtBYC,EAAuBR,EAAY,oBAAqB,CACjE,MAAO,KAAO,CACV,KAAM,sCACN,QAAS,IACjB,GACI,QAAS,CACL,MAAM,WAAWC,EAAS,CACtB,KAAK,QAAU,KACf,GAAI,CAEA,MAAMC,GADM,MAAMC,EAAM,IAAI,GAAG,KAAK,IAAI,GAAGF,CAAO,yBAA0BG,CAAgB,GAC3E,KACjB,KAAK,QAAUF,CAClB,OAAQG,EAAO,CACZ,QAAQ,IAAIA,CAAK,CACpB,CACJ,CACJ,EACD,QAAS,CAAE,CACf,CAAC,m9CCuFKI,EAAO,wCA5BSC,EAAS,CAC7B,YAAa,CACX,IAAK,CACH,cAAe,CAChB,EACD,IAAK,CACH,cAAe,CAChB,EACD,IAAK,CACH,cAAe,CAChB,EACD,KAAM,CACJ,cAAe,CAChB,EACD,KAAM,CACJ,cAAe,GAChB,CACF,CACH,CAAC,EAEeA,EAAS,CAACC,CAAU,CAAC,EACrC,MAAMC,EAAaC,EAAe,EAC5BC,EAAaC,EAAe,EAC5BC,EAAiBjB,EAAmB,EACpCkB,EAAoBT,EAAsB,EAC1CU,EAAQC,EAAQ,EAChBC,EAASC,EAAS,EAClBC,EAAgBC,EAAI,CAAC,EAGPb,EAAS,CAAC,EAAG,EAAG,EAAG,CAAC,CAAC,EACzC,MAAMc,EAAQC,EAAS,IAAMb,EAAW,KAAK,EAC7C,IAAIc,EAAUD,EAAS,IAAMR,EAAkB,OAAO,EAClDU,EAASJ,EAAI,IAAI,EAErBK,EAAU,SAAY,CACpB,MAAMC,EAAeX,EAAM,OAAO,EAAE,CACtC,CAAC,EAED,MAAMW,EAAiB,MAAO5B,GAAY,CACxC,MAAMW,EAAW,aAAaX,CAAO,EACrC,MAAMgB,EAAkB,WAAWL,EAAW,MAAM,EAAE,EACtD,MAAMI,EAAe,QAAQJ,EAAW,MAAM,EAAE,EAChDe,EAAO,MAAQG,EAAa,KAC9B,EAEMA,EAAeL,EAAS,IACrBT,EAAe,aAAaM,EAAc,KAAK,CACvD,EAEKS,EAAc,MAAO9B,GAAY,CACrC,MAAM4B,EAAe5B,CAAO,EAC5BmB,EAAO,KAAK,GAAGX,CAAI,GAAGR,CAAO,EAAE,EAC/B,OAAO,SAAS,EAAG,CAAC,CACtB"}